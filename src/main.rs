
use num::bigint::BigUint;
use num::pow;
use std::thread;
use std::fs;


fn main() {

    let handle1 = thread::spawn(move || {
        let answer = BigUint::from_bytes_be(b"11385028069877823160350082511079497503362042710168209847471850511621231132222574688925628868858964530282861984511155304436001470850979322614133025858387056737987585558491780120553357853384707359263066342432161796035665706954512693932681001916168279337832675579414743437090359172071867529709959138604506072224");
        let mod_number = BigUint::from_bytes_be(b"154630780241554549314889812380012169628801479774919773590390802213888682299639672145014480012532207114916313795999136383469465287485604350119881267582377611611093038541435001852266228973812305563427862932143035578809272578333170211393281505220425516994916236231089919633570061661810865858981338586140819892137");
        let be_mod_without_20 = BigUint::from_bytes_be(b"85643872221027983945140029249931104820567951600584833909005783369176860477232406926561286494719209197831080784037167921337686425491150191174538814184195939317176734726250278712364575817459265313423878865919264000262684322911887792304985074243199659001249040492719635575233989923990271091");
    
        for i in 10000000000000000000u128..19999999999999999999u128 {
            if pow(BigUint::parse_bytes((i.to_string() + &be_mod_without_20.to_string()).as_bytes(), 10).unwrap(),2) % &mod_number == answer {
                println!("The answer is: {}",i);
                fs::write("C:\\Users\\nuo\\Desktop\\123.txt", i.to_string()).unwrap();
                println!("thread1 has finashed.");
                break;
            }
        }
    });

    let handle2 = thread::spawn(move || {
        for i in 19999999999999999999u128..29999999999999999999u128 {
            let answer2 = BigUint::from_bytes_be(b"11385028069877823160350082511079497503362042710168209847471850511621231132222574688925628868858964530282861984511155304436001470850979322614133025858387056737987585558491780120553357853384707359263066342432161796035665706954512693932681001916168279337832675579414743437090359172071867529709959138604506072224");
            let mod_number2 = BigUint::from_bytes_be(b"154630780241554549314889812380012169628801479774919773590390802213888682299639672145014480012532207114916313795999136383469465287485604350119881267582377611611093038541435001852266228973812305563427862932143035578809272578333170211393281505220425516994916236231089919633570061661810865858981338586140819892137");
            let be_mod_without_202 = BigUint::from_bytes_be(b"85643872221027983945140029249931104820567951600584833909005783369176860477232406926561286494719209197831080784037167921337686425491150191174538814184195939317176734726250278712364575817459265313423878865919264000262684322911887792304985074243199659001249040492719635575233989923990271091");
        
            if pow(BigUint::parse_bytes((i.to_string() + &be_mod_without_202.to_string()).as_bytes(), 10).unwrap(),2) % &mod_number2 == answer2 {
                println!("The answer is: {}",i);
                fs::write("C:\\Users\\nuo\\Desktop\\123.txt", i.to_string()).unwrap();
                println!("thread2 has finashed.");
                break;
            }
        }
    });

    let handle3 = thread::spawn(|| {
        for i in 29999999999999999999u128..39999999999999999999u128 {
            let answer3 = BigUint::from_bytes_be(b"11385028069877823160350082511079497503362042710168209847471850511621231132222574688925628868858964530282861984511155304436001470850979322614133025858387056737987585558491780120553357853384707359263066342432161796035665706954512693932681001916168279337832675579414743437090359172071867529709959138604506072224");
            let mod_number3 = BigUint::from_bytes_be(b"154630780241554549314889812380012169628801479774919773590390802213888682299639672145014480012532207114916313795999136383469465287485604350119881267582377611611093038541435001852266228973812305563427862932143035578809272578333170211393281505220425516994916236231089919633570061661810865858981338586140819892137");
            let be_mod_without_203 = BigUint::from_bytes_be(b"85643872221027983945140029249931104820567951600584833909005783369176860477232406926561286494719209197831080784037167921337686425491150191174538814184195939317176734726250278712364575817459265313423878865919264000262684322911887792304985074243199659001249040492719635575233989923990271091");
        
            if pow(BigUint::parse_bytes((i.to_string() + &be_mod_without_203.to_string()).as_bytes(), 10).unwrap(),2) % &mod_number3 == answer3 {
                println!("The answer is: {}",i);
                fs::write("C:\\Users\\nuo\\Desktop\\123.txt", i.to_string()).unwrap();
                println!("thread3 has finashed.");
                break;
            }
        }
    });

    let handle4 = thread::spawn(|| {
        for i in 39999999999999999999u128..49999999999999999999u128 {
            let answer4 = BigUint::from_bytes_be(b"11385028069877823160350082511079497503362042710168209847471850511621231132222574688925628868858964530282861984511155304436001470850979322614133025858387056737987585558491780120553357853384707359263066342432161796035665706954512693932681001916168279337832675579414743437090359172071867529709959138604506072224");
            let mod_number4 = BigUint::from_bytes_be(b"154630780241554549314889812380012169628801479774919773590390802213888682299639672145014480012532207114916313795999136383469465287485604350119881267582377611611093038541435001852266228973812305563427862932143035578809272578333170211393281505220425516994916236231089919633570061661810865858981338586140819892137");
            let be_mod_without_204 = BigUint::from_bytes_be(b"85643872221027983945140029249931104820567951600584833909005783369176860477232406926561286494719209197831080784037167921337686425491150191174538814184195939317176734726250278712364575817459265313423878865919264000262684322911887792304985074243199659001249040492719635575233989923990271091");
        
            if pow(BigUint::parse_bytes((i.to_string() + &be_mod_without_204.to_string()).as_bytes(), 10).unwrap(),2) % &mod_number4 == answer4 {
                println!("The answer is: {}",i);
                fs::write("C:\\Users\\nuo\\Desktop\\123.txt", i.to_string()).unwrap();
                println!("thread4 has finashed.");
                break;
            }
        }
    });

    let handle5 = thread::spawn(|| {
        let answer5 = BigUint::from_bytes_be(b"11385028069877823160350082511079497503362042710168209847471850511621231132222574688925628868858964530282861984511155304436001470850979322614133025858387056737987585558491780120553357853384707359263066342432161796035665706954512693932681001916168279337832675579414743437090359172071867529709959138604506072224");
        let mod_number5 = BigUint::from_bytes_be(b"154630780241554549314889812380012169628801479774919773590390802213888682299639672145014480012532207114916313795999136383469465287485604350119881267582377611611093038541435001852266228973812305563427862932143035578809272578333170211393281505220425516994916236231089919633570061661810865858981338586140819892137");
        let be_mod_without_205 = BigUint::from_bytes_be(b"85643872221027983945140029249931104820567951600584833909005783369176860477232406926561286494719209197831080784037167921337686425491150191174538814184195939317176734726250278712364575817459265313423878865919264000262684322911887792304985074243199659001249040492719635575233989923990271091");
    
        for i in 49999999999999999999u128..59999999999999999999u128 {
            if pow(BigUint::parse_bytes((i.to_string() + &be_mod_without_205.to_string()).as_bytes(), 10).unwrap(),2) % &mod_number5 == answer5 {
                println!("The answer is: {}",i);
                fs::write("C:\\Users\\nuo\\Desktop\\123.txt", i.to_string()).unwrap();
                println!("thread5 has finashed.");
                break;
            }
        }
    });

    let handle6 = thread::spawn(|| {
        let answer6 = BigUint::from_bytes_be(b"11385028069877823160350082511079497503362042710168209847471850511621231132222574688925628868858964530282861984511155304436001470850979322614133025858387056737987585558491780120553357853384707359263066342432161796035665706954512693932681001916168279337832675579414743437090359172071867529709959138604506072224");
        let mod_number6 = BigUint::from_bytes_be(b"154630780241554549314889812380012169628801479774919773590390802213888682299639672145014480012532207114916313795999136383469465287485604350119881267582377611611093038541435001852266228973812305563427862932143035578809272578333170211393281505220425516994916236231089919633570061661810865858981338586140819892137");
        let be_mod_without_206 = BigUint::from_bytes_be(b"85643872221027983945140029249931104820567951600584833909005783369176860477232406926561286494719209197831080784037167921337686425491150191174538814184195939317176734726250278712364575817459265313423878865919264000262684322911887792304985074243199659001249040492719635575233989923990271091");
    
        for i in 59999999999999999999u128..69999999999999999999u128 {
            if pow(BigUint::parse_bytes((i.to_string() + &be_mod_without_206.to_string()).as_bytes(), 10).unwrap(),2) % &mod_number6 == answer6 {
                println!("The answer is: {}",i);
                fs::write("C:\\Users\\nuo\\Desktop\\123.txt", i.to_string()).unwrap();
                println!("thread6 has finashed.");
                break;
            }
        }
    });

    let handle7 = thread::spawn(|| {
        let answer7 = BigUint::from_bytes_be(b"11385028069877823160350082511079497503362042710168209847471850511621231132222574688925628868858964530282861984511155304436001470850979322614133025858387056737987585558491780120553357853384707359263066342432161796035665706954512693932681001916168279337832675579414743437090359172071867529709959138604506072224");
        let mod_number7 = BigUint::from_bytes_be(b"154630780241554549314889812380012169628801479774919773590390802213888682299639672145014480012532207114916313795999136383469465287485604350119881267582377611611093038541435001852266228973812305563427862932143035578809272578333170211393281505220425516994916236231089919633570061661810865858981338586140819892137");
        let be_mod_without_207 = BigUint::from_bytes_be(b"85643872221027983945140029249931104820567951600584833909005783369176860477232406926561286494719209197831080784037167921337686425491150191174538814184195939317176734726250278712364575817459265313423878865919264000262684322911887792304985074243199659001249040492719635575233989923990271091");
    
        for i in 69999999999999999999u128..79999999999999999999u128 {
            if pow(BigUint::parse_bytes((i.to_string() + &be_mod_without_207.to_string()).as_bytes(), 10).unwrap(),2) % &mod_number7 == answer7 {
                println!("The answer is: {}",i);
                fs::write("C:\\Users\\nuo\\Desktop\\123.txt", i.to_string()).unwrap();
                println!("thread7 has finashed.");
                break;
            }
        }
    });

    let handle8 = thread::spawn(|| {
        for i in 79999999999999999999u128..99999999999999999999u128 {
            let answer8 = BigUint::from_bytes_be(b"11385028069877823160350082511079497503362042710168209847471850511621231132222574688925628868858964530282861984511155304436001470850979322614133025858387056737987585558491780120553357853384707359263066342432161796035665706954512693932681001916168279337832675579414743437090359172071867529709959138604506072224");
            let mod_number8 = BigUint::from_bytes_be(b"154630780241554549314889812380012169628801479774919773590390802213888682299639672145014480012532207114916313795999136383469465287485604350119881267582377611611093038541435001852266228973812305563427862932143035578809272578333170211393281505220425516994916236231089919633570061661810865858981338586140819892137");
            let be_mod_without_208 = BigUint::from_bytes_be(b"85643872221027983945140029249931104820567951600584833909005783369176860477232406926561286494719209197831080784037167921337686425491150191174538814184195939317176734726250278712364575817459265313423878865919264000262684322911887792304985074243199659001249040492719635575233989923990271091");
        
            if pow(BigUint::parse_bytes((i.to_string() + &be_mod_without_208.to_string()).as_bytes(), 10).unwrap(),2) % &mod_number8 == answer8 {
                println!("The answer is: {}",i);
                fs::write("C:\\Users\\nuo\\Desktop\\123.txt", i.to_string()).unwrap();
                println!("thread8 has finashed.");
                break;
            }
        }
    });
    
handle1.join().unwrap();
handle2.join().unwrap();
handle3.join().unwrap();
handle4.join().unwrap();
handle5.join().unwrap();
handle6.join().unwrap();
handle7.join().unwrap();
handle8.join().unwrap();





}










/*
fn main() {
    let answer = BigUint::from_bytes_be(b"11385028069877823160350082511079497503362042710168209847471850511621231132222574688925628868858964530282861984511155304436001470850979322614133025858387056737987585558491780120553357853384707359263066342432161796035665706954512693932681001916168279337832675579414743437090359172071867529709959138604506072224");
    let mod_number = BigUint::from_bytes_be(b"154630780241554549314889812380012169628801479774919773590390802213888682299639672145014480012532207114916313795999136383469465287485604350119881267582377611611093038541435001852266228973812305563427862932143035578809272578333170211393281505220425516994916236231089919633570061661810865858981338586140819892137");
    let be_mod_without_20 = BigUint::from_bytes_be(b"85643872221027983945140029249931104820567951600584833909005783369176860477232406926561286494719209197831080784037167921337686425491150191174538814184195939317176734726250278712364575817459265313423878865919264000262684322911887792304985074243199659001249040492719635575233989923990271091");
    let mut the_try = String::new();
    let mut the_trying = BigUint::from_bytes_be(b"1111111111111111111185643872221027983945140029249931104820567951600584833909005783369176860477232406926561286494719209197831080784037167921337686425491150191174538814184195939317176734726250278712364575817459265313423878865919264000262684322911887792304985074243199659001249040492719635575233989923990271091");
    let mut condiction: bool = false; 

    for i in 10000000000000000000u128..99999999999999999999u128 {
        the_try = i.to_string() + &be_mod_without_20.to_string();
        the_trying = BigUint::parse_bytes(the_try.as_bytes(), 10).unwrap();
        condiction = pow(the_trying,2) % &mod_number == answer;
        if condiction {
            println!("The answer is: {}",i);
            break;
        }

    }


    
}
*/